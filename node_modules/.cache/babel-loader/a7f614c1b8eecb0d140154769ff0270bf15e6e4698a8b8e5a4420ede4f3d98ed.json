{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\blogs-context-starter\\\\src\\\\Context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\n\n// Step 1: Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport const baseUrl = \"https://codehelp-apis.vercel.app/api/get-blogs\";\nexport const AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  // Function to fetch blog posts based on page number\n  const fetchBlogPosts = async function () {\n    let pageNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    setLoading(true);\n    const url = `${baseUrl}?page=${pageNumber}`; // Correct template literals usage\n\n    try {\n      const result = await fetch(url);\n      const data = await result.json();\n      setPage(data.page); // Assuming 'data.page' is the new page number\n      setTotalPages(data.totalPages);\n      setPosts(data.posts); // Assuming 'data.posts' is the array of posts\n    } catch (error) {\n      console.error(\"Error fetching blog posts:\", error);\n      setPage(1);\n      setPosts([]);\n      setTotalPages(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handler function for page change\n  const handlePageChange = pageNumber => {\n    setPage(pageNumber); // Update page state\n\n    // Fetch new blog posts for the selected page\n    fetchBlogPosts(pageNumber);\n  };\n\n  // Context value\n  const value = {\n    posts,\n    setPosts,\n    loading,\n    setLoading,\n    page,\n    setPage,\n    totalPages,\n    setTotalPages,\n    handlePageChange,\n    fetchBlogPosts\n  };\n\n  // Step 2: Provide context\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_s(AppContextProvider, \"9vCi9/wc4+HZ542Rv+g7w2zLxMk=\");\n_c = AppContextProvider;\nexport default AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AppContext","baseUrl","AppContextProvider","_ref","_s","children","loading","setLoading","posts","setPosts","page","setPage","totalPages","setTotalPages","fetchBlogPosts","pageNumber","arguments","length","undefined","url","result","fetch","data","json","error","console","handlePageChange","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/blogs-context-starter/src/Context/AppContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\n// Step 1: Create context\r\nexport const AppContext = createContext();\r\nexport const baseUrl = \"https://codehelp-apis.vercel.app/api/get-blogs\";\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(null);\r\n\r\n  // Function to fetch blog posts based on page number\r\n  const fetchBlogPosts = async (pageNumber = 1) => {\r\n    setLoading(true);\r\n    const url = `${baseUrl}?page=${pageNumber}`; // Correct template literals usage\r\n\r\n    try {\r\n      const result = await fetch(url);\r\n      const data = await result.json();\r\n\r\n      setPage(data.page); // Assuming 'data.page' is the new page number\r\n      setTotalPages(data.totalPages);\r\n      setPosts(data.posts); // Assuming 'data.posts' is the array of posts\r\n    } catch (error) {\r\n      console.error(\"Error fetching blog posts:\", error);\r\n      setPage(1);\r\n      setPosts([]);\r\n      setTotalPages(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handler function for page change\r\n  const handlePageChange = (pageNumber) => {\r\n    setPage(pageNumber); // Update page state\r\n\r\n    // Fetch new blog posts for the selected page\r\n    fetchBlogPosts(pageNumber);\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    posts,\r\n    setPosts,\r\n    loading,\r\n    setLoading,\r\n    page,\r\n    setPage,\r\n    totalPages,\r\n    setTotalPages,\r\n    handlePageChange,\r\n    fetchBlogPosts,\r\n  };\r\n\r\n  // Step 2: Provide context\r\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,UAAU,gBAAGJ,aAAa,EAAE;AACzC,OAAO,MAAMK,OAAO,GAAG,gDAAgD;AAEvE,OAAO,MAAMC,kBAAkB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC7C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMiB,cAAc,GAAG,eAAAA,CAAA,EAA0B;IAAA,IAAnBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IAC1CT,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMY,GAAG,GAAI,GAAElB,OAAQ,SAAQc,UAAW,EAAC,CAAC,CAAC;;IAE7C,IAAI;MACF,MAAMK,MAAM,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC/B,MAAMG,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,EAAE;MAEhCZ,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC,CAAC,CAAC;MACpBG,aAAa,CAACS,IAAI,CAACV,UAAU,CAAC;MAC9BH,QAAQ,CAACa,IAAI,CAACd,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDb,OAAO,CAAC,CAAC,CAAC;MACVF,QAAQ,CAAC,EAAE,CAAC;MACZI,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,SAAS;MACRN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMmB,gBAAgB,GAAIX,UAAU,IAAK;IACvCJ,OAAO,CAACI,UAAU,CAAC,CAAC,CAAC;;IAErB;IACAD,cAAc,CAACC,UAAU,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMY,KAAK,GAAG;IACZnB,KAAK;IACLC,QAAQ;IACRH,OAAO;IACPC,UAAU;IACVG,IAAI;IACJC,OAAO;IACPC,UAAU;IACVC,aAAa;IACba,gBAAgB;IAChBZ;EACF,CAAC;;EAED;EACA,oBAAOf,OAAA,CAACC,UAAU,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EAAEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAuB;AAC5E,CAAC;AAAC5B,EAAA,CApDWF,kBAAkB;AAAA+B,EAAA,GAAlB/B,kBAAkB;AAsD/B,eAAeA,kBAAkB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}