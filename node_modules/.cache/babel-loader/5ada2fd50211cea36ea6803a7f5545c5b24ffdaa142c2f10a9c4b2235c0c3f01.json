{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\blogs-context-starter\\\\src\\\\Components\\\\Blogs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../Context/AppContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Blogs = () => {\n  _s();\n  const {\n    posts,\n    loading,\n    fetchBlogPosts\n  } = useContext(AppContext);\n  useEffect(() => {\n    fetchBlogPosts(); // Fetch blog posts when component mounts\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-[620px] w-11/12 py-3 flex flex-col gap-y-7 my-[100px]\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"\",\n        children: \"No posts found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-4 rounded-md shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-lg\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: [\"By \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"italic\",\n          children: post.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 32\n        }, this), \" on\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"underline font-semibold\",\n          children: post.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: [\"Posted on \", post.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-base mt-2\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-x-2 items-center mt-2\",\n        children: post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs font-semibold underline text-blue-700 cursor-pointer\",\n          children: [\"#\", tag]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(Blogs, \"KRRMzKOommpxOFksdqKB/59ZgYM=\");\n_c = Blogs;\nexport default Blogs;\nvar _c;\n$RefreshReg$(_c, \"Blogs\");","map":{"version":3,"names":["React","useContext","useEffect","AppContext","jsxDEV","_jsxDEV","Blogs","_s","posts","loading","fetchBlogPosts","className","children","Spinner","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","title","author","category","date","content","tags","tag","index","id","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/blogs-context-starter/src/Components/Blogs.jsx"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"../Context/AppContext\";\r\n\r\nconst Blogs = () => {\r\n    const { posts, loading, fetchBlogPosts } = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        fetchBlogPosts(); // Fetch blog posts when component mounts\r\n    }, []); // Empty dependency array ensures this effect runs only once on mount\r\n\r\n    return (\r\n        <div className=\"max-w-[620px] w-11/12 py-3 flex flex-col gap-y-7 my-[100px]\">\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : posts.length === 0 ? (\r\n                <div className=\"\">\r\n                    <p className=\"\">No posts found</p>\r\n                </div>\r\n            ) : (\r\n                posts.map((post) => (\r\n                    <div key={post.id} className=\"border p-4 rounded-md shadow-md\">\r\n                        <p className=\"font-bold text-lg\">{post.title}</p>\r\n                        <p className=\"text-sm\">\r\n                            By <span className=\"italic\">{post.author}</span> on{\" \"}\r\n                            <span className=\"underline font-semibold\">{post.category}</span>\r\n                        </p>\r\n                        <p className=\"text-sm\">Posted on {post.date}</p>\r\n                        <p className=\"text-base mt-2\">{post.content}</p>\r\n                        <div className=\"flex flex-wrap gap-x-2 items-center mt-2\">\r\n                            {post.tags.map((tag, index) => (\r\n                                <span key={index} className=\"text-xs font-semibold underline text-blue-700 cursor-pointer\">\r\n                                    #{tag}\r\n                                </span>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Blogs;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}