{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\blogs-context-starter\\\\src\\\\Context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\n\n// Step 1: Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nconst AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  // Function to fetch blog posts based on page number\n  async function fetchBlogPosts() {\n    let pageNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    setLoading(true);\n    let url = ` ${baseUrl}?page=${pageNumber}`; // Assuming baseUrl is defined elsewhere\n\n    try {\n      const result = await fetch(url);\n      const data = await result.json();\n      setPage(data.page); // Assuming 'data.page' is the new page number\n      setTotalPages(data.totalPages);\n      setPosts(data.posts); // Assuming 'data.posts' is the array of posts\n    } catch (error) {\n      console.error(\"Error fetching blog posts:\", error);\n      setPage(1);\n      setPosts([]);\n      setTotalPages(null);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  // Handler function for page change\n  const handlePageChange = pageNumber => {\n    setPage(pageNumber); // Update page state\n\n    // Fetch new blog posts for the selected page\n    fetchBlogPosts(pageNumber);\n  };\n  const value = {\n    posts,\n    setPosts,\n    loading,\n    setLoading,\n    page,\n    setPage,\n    totalPages,\n    setTotalPages,\n    handlePageChange,\n    fetchBlogPosts\n  };\n\n  // Step 2: Provide context\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(AppContextProvider, \"9vCi9/wc4+HZ542Rv+g7w2zLxMk=\");\n_c = AppContextProvider;\nexport default AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AppContext","AppContextProvider","_ref","_s","children","loading","setLoading","posts","setPosts","page","setPage","totalPages","setTotalPages","fetchBlogPosts","pageNumber","arguments","length","undefined","url","baseUrl","result","fetch","data","json","error","console","handlePageChange","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/blogs-context-starter/src/Context/AppContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\n// Step 1: Create context\r\nexport const AppContext = createContext();\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [posts, setPosts] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(null);\r\n\r\n    // Function to fetch blog posts based on page number\r\n    async function fetchBlogPosts(pageNumber = 1) {\r\n        setLoading(true);\r\n        let url = ` ${baseUrl}?page=${pageNumber}`; // Assuming baseUrl is defined elsewhere\r\n\r\n        try {\r\n            const result = await fetch(url);\r\n            const data = await result.json();\r\n\r\n            setPage(data.page); // Assuming 'data.page' is the new page number\r\n            setTotalPages(data.totalPages);\r\n            setPosts(data.posts); // Assuming 'data.posts' is the array of posts\r\n\r\n        } catch (error) {\r\n            console.error(\"Error fetching blog posts:\", error);\r\n            setPage(1);\r\n            setPosts([]);\r\n            setTotalPages(null);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    // Handler function for page change\r\n    const handlePageChange = (pageNumber) => {\r\n        setPage(pageNumber); // Update page state\r\n\r\n        // Fetch new blog posts for the selected page\r\n        fetchBlogPosts(pageNumber);\r\n    };\r\n\r\n    const value = {\r\n        posts,\r\n        setPosts,\r\n        loading,\r\n        setLoading,\r\n        page,\r\n        setPage,\r\n        totalPages,\r\n        setTotalPages,\r\n        handlePageChange,\r\n        fetchBlogPosts\r\n    };\r\n\r\n    // Step 2: Provide context\r\n    return (\r\n        <AppContext.Provider value={value}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AppContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,UAAU,gBAAGJ,aAAa,EAAE;AAEzC,MAAMK,kBAAkB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,eAAegB,cAAcA,CAAA,EAAiB;IAAA,IAAhBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IACxCT,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIY,GAAG,GAAI,IAAGC,OAAQ,SAAQL,UAAW,EAAC,CAAC,CAAC;;IAE5C,IAAI;MACA,MAAMM,MAAM,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MAC/B,MAAMI,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,EAAE;MAEhCb,OAAO,CAACY,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC;MACpBG,aAAa,CAACU,IAAI,CAACX,UAAU,CAAC;MAC9BH,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC,CAAC,CAAC;IAE1B,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDd,OAAO,CAAC,CAAC,CAAC;MACVF,QAAQ,CAAC,EAAE,CAAC;MACZI,aAAa,CAAC,IAAI,CAAC;IACvB,CAAC,SAAS;MACNN,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ;;EAEA;EACA,MAAMoB,gBAAgB,GAAIZ,UAAU,IAAK;IACrCJ,OAAO,CAACI,UAAU,CAAC,CAAC,CAAC;;IAErB;IACAD,cAAc,CAACC,UAAU,CAAC;EAC9B,CAAC;EAED,MAAMa,KAAK,GAAG;IACVpB,KAAK;IACLC,QAAQ;IACRH,OAAO;IACPC,UAAU;IACVG,IAAI;IACJC,OAAO;IACPC,UAAU;IACVC,aAAa;IACbc,gBAAgB;IAChBb;EACJ,CAAC;;EAED;EACA,oBACId,OAAA,CAACC,UAAU,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvB,QAAA,EAC7BA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAE9B,CAAC;AAAC7B,EAAA,CAxDIF,kBAAkB;AAAAgC,EAAA,GAAlBhC,kBAAkB;AA0DxB,eAAeA,kBAAkB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}