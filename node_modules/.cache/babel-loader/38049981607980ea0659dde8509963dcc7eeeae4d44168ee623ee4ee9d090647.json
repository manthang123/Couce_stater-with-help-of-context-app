{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\blogs-context-starter\\\\src\\\\Context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\n\n// Step 1: Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nconst AppContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // Destructure children from props\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  // data filling pending \n  async function fetchBlogPosts() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    setLoading(true);\n    try {\n      const result = await fetch(url);\n    } catch (error) {}\n  }\n  const value = {\n    posts,\n    setPosts,\n    loading,\n    setLoading,\n    page,\n    setPage,\n    totalPages,\n    setTotalPages\n  };\n\n  // Step 2: Provide context \n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(AppContextProvider, \"9vCi9/wc4+HZ542Rv+g7w2zLxMk=\");\n_c = AppContextProvider;\nexport default AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AppContext","AppContextProvider","_ref","_s","children","loading","setLoading","posts","setPosts","page","setPage","totalPages","setTotalPages","fetchBlogPosts","arguments","length","undefined","result","fetch","url","error","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/blogs-context-starter/src/Context/AppContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\n// Step 1: Create context\r\nexport const AppContext = createContext();\r\n\r\nconst AppContextProvider = ({ children }) => { // Destructure children from props\r\n   const [loading, setLoading] = useState(false);\r\n   const [posts, setPosts] = useState([]);\r\n   const [page, setPage] = useState(1);\r\n   const [totalPages, setTotalPages] = useState(null);\r\n   \r\n    // data filling pending \r\n    async function fetchBlogPosts (page = 1){\r\n        setLoading(true);\r\n        try {\r\n             const result = await fetch (url)\r\n        }\r\n         catch (error) {\r\n            \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const value = {\r\n        posts, \r\n        setPosts,\r\n        loading,\r\n        setLoading,\r\n        page,\r\n        setPage,\r\n        totalPages,\r\n        setTotalPages\r\n    };\r\n\r\n    // Step 2: Provide context \r\n    return (\r\n        <AppContext.Provider value={value}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AppContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,UAAU,gBAAGJ,aAAa,EAAE;AAEzC,MAAMK,kBAAkB,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAAO;EAC5C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAEjD;EACA,eAAegB,cAAcA,CAAA,EAAW;IAAA,IAATJ,IAAI,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;IACnCR,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACC,MAAMW,MAAM,GAAG,MAAMC,KAAK,CAAEC,GAAG,CAAC;IACrC,CAAC,CACA,OAAOC,KAAK,EAAE,CAEf;EAGJ;EAIA,MAAMC,KAAK,GAAG;IACVd,KAAK;IACLC,QAAQ;IACRH,OAAO;IACPC,UAAU;IACVG,IAAI;IACJC,OAAO;IACPC,UAAU;IACVC;EACJ,CAAC;;EAED;EACA,oBACIb,OAAA,CAACC,UAAU,CAACsB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAC7BA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAE9B,CAAC;AAACvB,EAAA,CAtCIF,kBAAkB;AAAA0B,EAAA,GAAlB1B,kBAAkB;AAwCxB,eAAeA,kBAAkB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}